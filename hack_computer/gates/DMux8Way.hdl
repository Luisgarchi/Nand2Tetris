// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Get not of sel bits
    DMux(in= in, sel= sel[2], a= inabcd, b= inefgh);

    DMux(in= inabcd, sel= sel[1], a= inab, b= incd);
    DMux(in= inefgh, sel= sel[1], a= inef, b= ingh);

    DMux(in= inab, sel= sel[0], a= a, b= b);
    DMux(in= incd, sel= sel[0], a= c, b= d);
    DMux(in= inef, sel= sel[0], a= e, b= f);    
    DMux(in= ingh, sel= sel[0], a= g, b= h); mjhgx
}
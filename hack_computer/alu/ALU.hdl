// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/2/ALU.hdl
/**
 * ALU (Arithmetic Logic Unit):
 * Computes out = one of the following functions:
 *                0, 1, -1,
 *                x, y, !x, !y, -x, -y,
 *                x + 1, y + 1, x - 1, y - 1,
 *                x + y, x - y, y - x,
 *                x & y, x | y
 * on the 16-bit inputs x, y,
 * according to the input bits zx, nx, zy, ny, f, no.
 * In addition, computes the two output bits:
 * if (out == 0) zr = 1, else zr = 0
 * if (out < 0)  ng = 1, else ng = 0
 */
// Implementation: Manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) sets x = 0        // 16-bit constant
// if (nx == 1) sets x = !x       // bitwise not
// if (zy == 1) sets y = 0        // 16-bit constant
// if (ny == 1) sets y = !y       // bitwise not
// if (f == 1)  sets out = x + y  // integer 2's complement addition
// if (f == 0)  sets out = x & y  // bitwise and
// if (no == 1) sets out = !out   // bitwise not

CHIP ALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute (out = x + y) or (out = x & y)?
        no; // negate the out output?
    OUT 
        out[16], // 16-bit output
        zr,      // if (out == 0) equals 1, else 0
        ng;      // if (out < 0)  equals 1, else 0

    PARTS:
    // Zero the inputs
    Mux16(a= x, b= false, sel= zx, out= xz);
    Mux16(a= y, b= false, sel= zy, out= yz);

    // Negate the inputs
    Not16(in= xz, out= notxz);
    Not16(in= yz, out= notyz);
    Mux16(a= xz, b= notxz, sel= nx, out= xzn);
    Mux16(a= yz, b= notyz, sel= ny, out= yzn);

    // Compute x+y or x&y
    Add16(a= xzn, b= yzn, out= xplusy);
    And16(a= xzn, b= yzn, out= xandy);
    Mux16(a= xandy, b= xplusy, sel= f, out= fxy);

    // Negate output
    Not16(in= fxy, out= notfxy);

    // Need to split the output up into its own variables (or "internal pins")
    Mux16(a= fxy, b= notfxy, sel= no, out[0..7]= lsb, out[8..14]= msb, out[15]= msbit);
    
    // Dummy Mux to merge all variables
    Mux16(a[0..7]= lsb, a[8..14]= msb, a[15]= msbit, b= true, sel= false, out= out);

    // Dummy gate to output negative
    And(a= msbit, b= true, out= ng);

    // not zero 
    Or8Way(in= lsb, out= orlsb);
    Or8Way(in[0..6]= msb, in[7]= msbit, out= ormsb);
    Or(a= orlsb, b= ormsb, out= or16bits);
    Not(in= or16bits, out= zr);


    
}